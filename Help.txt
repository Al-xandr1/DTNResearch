# Исходные данные
Исходные данные трасс можно взять тут: https://yadi.sk/d/qz5yuMo_vPsJM 
Это архивы с исходными трассами и результатами многоих экспериментов. Для распаковки может потребоваться несколько гигабайт на жёстком диске. Например, для KAIST:
* трассы лежат тут ./tracefiles (только файлы с расширением .txt)
* путевые точки, полученные WayPointFinder'ом - тут ./waypointfiles (KAIST Real Waypoints) (только файлы с расширением .wpt)
* файл bounds.bnd и прочие выходные файлы лежат в корне дистрибутива ./
* локации лежат, полученные через Hotspot - тут hotspotfiles
* и так далее. 


# Запуск WaypointFinder 
Запуск этой программы возможен в нескольких вариантах: 
* для определения путевых точек с последующим подсчётом статистики: 
	- для этого предварительно в модуле WaypointFinder нужно включить (раскомментировать) подпрограмму нахождения путевых точек:
		argc = 2; argv = new char*[2] {"program", WPFIND}; 
		mainMain(argc, argv);
	- положить известные файлы исходных трасс в папку tracefiles в директорию программы и запусить программу;
	- в результате в папке waypointfiles появятся путевые точки и файл статистики statistics.stat на основе путевых точек. 
* для подсчёта статистики на имеющихся путевых точках (или возможно сразу на точках трассы - если нужно, опишу позже): 
	- для этого предварительно в модуле WaypointFinder нужно выключить (закомментировать) подпрограмму нахождения путевых точек (см. строчки выше);
	- положить известные файлы путевых точек в папку waypointfiles в директорию программы и запусить программу. 
	- в результате в папке waypointfiles появится файл statistics.stat - статистика мобильности на основе путевых точек без предварительного вызова аггрегирующей функции WPFIND. 
* файл bound.bnd получается для трасс и путевых точек свои (в соответствующих папках)


# Запуск Hotspot
Для запуска процедуры определения локаций нужно:
* положить файлы с путевыми точками в папке waypointfiles в директорию программы; 
* положить файл bound.bnd (от путевых точек) в директорию программы; 
* запустить Hotspot
* в резульате получим в директории программы выходные файлы с локациями в папке hotspotfiles и файл locations.loc


# Запуск SLAW модели НА ОСНОВЕ ДАННЫХ Levy модели:
1. Запустить Levy модель для получения папок с данными waypointfiles, hotspotfiles, tracefiles (для прогонки через WaypointFinder если нужно для получения файл statistics.stat), locations.loc;
2. Запустиь RootFinder на основе выше упомянутых папок waypointfiles и hotspotfiles. Получить папку rootfiles, length.hst, allroots.roo;
3. Чтобы получить файл bounds.bnd нужно запустить модуль WaypointFinder на основе полученных ранее waypointfiles. 
	Для этого предварительно в модуле WaypointFinder нужно отключить подпрограмму нахождения путевых точек, закомментировав строчку: argc = 2; argv = new char*[2] {"program", WPFIND}; mainMain(argc, argv);
	Также после вызова этого модуля получается файл statistics.stat - статистика мобильности на основе ПУТЕВЫХ точек без предварительного вызова аггрегирующей функции WPFIND. 
	Если нужно предварительно прогнать аггрегирующую процедуру - то нужно раскомментировать строчку: argc = 2; argv = new char*[2] {"program", WPFIND}; mainMain(argc, argv);
4. Далее нужно получить файл spotcount.cnt с помощью модуля RepeatCounter. Входные данные для него hotspotfiles и rootfiles;
5. Файлы herst.txt и variances.txt нужно взять на основе данных от реальной трассы
6. Полученный набор файлов положить в ..\DTNResearch\RoutingResearch\RoutingTest2\Traces\